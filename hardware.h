/*
		This file has been auto-generated by WebbotLib tools V1.1
				** DO NOT MODIFY BY HAND **
*/
#ifndef _HARDWARE_H_
#define _HARDWARE_H_

#if !defined (_LIB_HARDWARE_C_)  && !defined(_LIB_HARDWARE_CPP_)
#define BUILDING_LIBRARY
#define _LIB_HARDWARE_C_
#endif

#ifndef F_CPU
#warning No CPU speed specified - assuming running at 16000000
#define F_CPU 16000000
#endif

#if F_CPU != 16000000
# warning "Board runs at 16000000 but you have defined a different value"
#endif

#if defined (__AVR_ATmega640__)
#else
#	error You must set the device to the ATmega640
#endif

#define FLASH_SIZE 65536
#define RAM_SIZE 8192
#define EEPROM_SIZE 4096
#define _NUM_PCINT_PINS 11

// Include library files
#include <libdefs.h>
#include <core.h>
#include <timer.h>
#include <a2d.h>
#include <rprintf.h>
#include <led.h>
#include <stdlib.h>
#include <avr/eeprom.h>
#include <switch.h>
#include <uart.h>
#include <errors.h>
#include <buffer.h>
#include <Servos/Dynamixel/AX12.h>
#include <Sensors/Distance/Sharp/GP2.h>
#include <motorPWM.h>
#include <servos.h>
#include "lib/lib_timerdef.h"
#include "lib/lib_iopins.h"
#ifdef __cplusplus
extern "C" {
#endif

// ------------------- uart1 -------------------
extern MAKE_WRITER(uart1SendByte);
extern MAKE_READER( uart1GetByte);

// Create hardware UART uart1
extern HW_UART _uart1;
#define uart1 &_uart1
#define UART1 uart1

// ------------------- UART2toXbee38400 -------------------
extern MAKE_WRITER(UART2toXbee38400SendByte);
extern MAKE_READER( UART2toXbee38400GetByte);

// Create hardware UART UART2toXbee38400
extern HW_UART _UART2toXbee38400;
#define UART2toXbee38400 &_UART2toXbee38400
#define UART2 UART2toXbee38400

// ------------------- UART3toAX12_driver_uart -------------------
extern MAKE_WRITER(UART3toAX12_driver_uartSendByte);
extern MAKE_READER( UART3toAX12_driver_uartGetByte);

// Create hardware UART UART3toAX12_driver_uart
extern HW_UART _UART3toAX12_driver_uart;
#define UART3toAX12_driver_uart &_UART3toAX12_driver_uart
#define UART3 UART3toAX12_driver_uart

// ------------------- UART0toUSB38400 -------------------
extern MAKE_WRITER(UART0toUSB38400SendByte);
extern MAKE_READER( UART0toUSB38400GetByte);

// Create hardware UART UART0toUSB38400
extern HW_UART _UART0toUSB38400;
#define UART0toUSB38400 &_UART0toUSB38400
#define UART0 UART0toUSB38400

// ----------- Define the ADC channels ----------
#define ADC0 ADC_NUMBER_TO_CHANNEL(0)
#define ADC1 ADC_NUMBER_TO_CHANNEL(1)
#define ADC2 ADC_NUMBER_TO_CHANNEL(2)
#define ADC3 ADC_NUMBER_TO_CHANNEL(3)
#define ADC4 ADC_NUMBER_TO_CHANNEL(4)
#define ADC5 ADC_NUMBER_TO_CHANNEL(5)
#define ADC6 ADC_NUMBER_TO_CHANNEL(6)
#define ADC7 ADC_NUMBER_TO_CHANNEL(7)
#define ADC8 ADC_NUMBER_TO_CHANNEL(8)
#define ADC9 ADC_NUMBER_TO_CHANNEL(9)
#define ADC10 ADC_NUMBER_TO_CHANNEL(10)
#define ADC11 ADC_NUMBER_TO_CHANNEL(11)
#define ADC12 ADC_NUMBER_TO_CHANNEL(12)
#define ADC13 ADC_NUMBER_TO_CHANNEL(13)
#define ADC14 ADC_NUMBER_TO_CHANNEL(14)
#define ADC15 ADC_NUMBER_TO_CHANNEL(15)
extern const uint8_t NUM_ADC_CHANNELS;

// ----------- My devices -----------------------
extern SWITCH button;
extern DYNAMIXEL_AX12 servo1;
extern DYNAMIXEL_AX12 servo11;
extern DYNAMIXEL_AX12 servo12;
extern DYNAMIXEL_AX12 servo13;
extern DYNAMIXEL_AX12 servo14;
extern DYNAMIXEL_AX12 servo21;
extern DYNAMIXEL_AX12 servo22;
extern DYNAMIXEL_AX12 servo23;
extern DYNAMIXEL_AX12 servo24;
extern DYNAMIXEL_AX12 servo31;
extern DYNAMIXEL_AX12 servo32;
extern DYNAMIXEL_AX12 servo33;
extern DYNAMIXEL_AX12 servo34;
extern DYNAMIXEL_AX12 servo41;
extern DYNAMIXEL_AX12 servo42;
extern DYNAMIXEL_AX12 servo43;
extern DYNAMIXEL_AX12 servo44;
extern DYNAMIXEL_AX12 servo51;
extern DYNAMIXEL_AX12 servo52;
extern DYNAMIXEL_AX12_DRIVER UART3toAX12_driver;
extern Sharp_GP2D12 distance;
extern MOTOR LeftGun;
extern MOTOR RightGun;
extern MOTOR_DRIVER PWMtoVNH3SP30;
extern Sharp_GP2D12 distance2;
extern SERVO antijam;
extern SERVO_DRIVER bank1;

void initHardware(void);
#ifdef __cplusplus
}
#endif
#endif

// undefine all ports so the user cannot change them directly
#undef PORTA
#undef DDRA
#undef PINA
#undef PORTB
#undef DDRB
#undef PINB
#undef PORTC
#undef DDRC
#undef PINC
#undef PORTD
#undef DDRD
#undef PIND
#undef PORTE
#undef DDRE
#undef PINE
#undef PORTF
#undef DDRF
#undef PINF
#undef PORTG
#undef DDRG
#undef PING
#undef PORTH
#undef DDRH
#undef PINH
#undef PORTJ
#undef DDRJ
#undef PINJ
#undef PORTK
#undef DDRK
#undef PINK
#undef PORTL
#undef DDRL
#undef PINL

// Undefine timer registers to stop users changing them
#undef TCNT0
#undef TCCR0B
#undef OCR0A
#undef OCR0B
#undef TCNT1
#undef TCCR1B
#undef OCR1A
#undef OCR1B
#undef OCR1C
#undef TCNT2
#undef TCCR2B
#undef OCR2A
#undef OCR2B
#undef TCNT3
#undef TCCR3B
#undef OCR3A
#undef OCR3B
#undef OCR3C
#undef TCNT4
#undef TCCR4B
#undef OCR4A
#undef OCR4B
#undef OCR4C
#undef TCNT5
#undef TCCR5B
#undef OCR5A
#undef OCR5B
#undef OCR5C
